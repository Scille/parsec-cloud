name: parsec
base: core22
version: 3.0.0-b.11+dev
summary: Secure cloud framework
description: Parsec is an open-source cloud-based application that allow simple yet cryptographically secure file hosting.
grade: devel
confinement: classic
type: app

apps:
  parsec:
    plugs:
      - desktop
      - desktop-legacy
      - home
      - wayland
      - x11
      - opengl
      - browser-support
      - network
      - gsettings
      - audio-playback
      - pulseaudio
      - password-manager-service
    desktop: usr/share/applications/parsec.desktop
    command: bin/desktop-launch

parts:
  libparsec:
    plugin: nil
    source: .
    build-packages:
      - python3
      - libssl-dev
      - libfuse3-dev
      - pkg-config
      - patchelf
    stage-packages:
      # libssl3 is provided by core22
      - fuse3
    build-snaps:
      - node/18/stable
    stage:
      - libparsec.d.ts
      - libparsec.node
      - bin/fusermount* # include fusermount bin
      - lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libfuse3* # include libfuse3
    prime:
      - -libparsec.d.ts
      - -libparsec.node
    build-attributes:
      - enable-patchelf
    override-build: |
      set -x

      # Set system alias for python
      update-alternatives --install /usr/local/bin/python python $(which python3) 100

      # Install rust
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh /dev/stdin -y --default-toolchain none
      source "$HOME/.cargo/env"

      # Debug software versions
      node --version
      npm --version
      python --version
      cargo --version

      cd bindings/electron
      npm clean-install
      npm run build:release

      cp -va dist/libparsec/index.node "$CRAFT_PART_INSTALL/libparsec.node"
      cp -va dist/libparsec/index.d.ts "$CRAFT_PART_INSTALL/libparsec.d.ts"

  # We pre-package `megashark-lib` to workaround a permission issue during it's `prepare` step when installed as a 3rd dependencies from `client-vite`.
  megashark-lib:
    plugin: nil
    build-snaps:
      - node/18/stable
    source: client
    build-packages:
      - git
      - jq
    override-build: |
      set -x

      # Clone megashark-lib locally
      MEGASHARK_COMMIT_ID=$(jq -r '.packages."node_modules/megashark-lib".resolved' package-lock.json | cut -d '#' -f 2)
      git clone https://github.com/Scille/megashark-lib.git
      cd megashark-lib
      git reset --hard $MEGASHARK_COMMIT_ID

      npm clean-install
      MEGASHARK_ARCHIVE=$(npm pack | tail -n1)

      cp -v $MEGASHARK_ARCHIVE "$CRAFT_STAGE/megashark-lib.tar.gz"

  parsec:
    after:
      - megashark-lib
      - libparsec
    plugin: nil
    source: client
    build-snaps:
      - node/18/stable
    build-attributes:
      - enable-patchelf
    override-build: |
      set -x

      # Debug software versions
      node --version
      npm --version

      # Patch client package.json to use local pre-packaged megashark-lib
      sed -i "s;megashark-lib\": \".*\";megashark-lib\": \"file:${CRAFT_STAGE}/megashark-lib.tar.gz\";" package.json

      npm install
      npm run electron:copy

      cd electron
      npm clean-install

      # Copy bindings
      rm -rf build # Cleanup build folder
      mkdir -pv build/{src,generated-ts/src}
      cp -va "${CRAFT_STAGE}/libparsec.node" build/src/libparsec.node
      cp -va "${CRAFT_STAGE}/libparsec.d.ts" build/generated-ts/src/libparsec.d.ts

      # Compile typescript
      npx tsc

      # Package
      node package.js --mode prod --platform linux dir

      cp -vr dist/linux-unpacked "$CRAFT_PART_INSTALL"/app

  parsec-desktop:
    plugin: nil
    source: client/electron/assets
    build-environment:
      - ICON_PATH: &desktop-icon-path usr/share/icons/hicolor/512x512/apps/parsec.png
      - DESKTOP_PATH: &desktop-path usr/share/applications/parsec.desktop
      - PARSEC_SCHEME: parsec3
    prime:
      - *desktop-icon-path
      - *desktop-path
    override-build: |
      mkdir -p $(dirname "$CRAFT_PART_INSTALL"/$ICON_PATH)
      cp -v 512x512.png "$CRAFT_PART_INSTALL"/$ICON_PATH

      mkdir -p $(dirname "$CRAFT_PART_INSTALL"/$DESKTOP_PATH)
      cat << EOF > "$CRAFT_PART_INSTALL"/$DESKTOP_PATH
      [Desktop Entry]
      Name=Parsec
      Comment=Secure cloud framework
      Exec=\${SNAP}/bin/desktop-launch %U
      Icon=\${SNAP}/$ICON_PATH
      Terminal=false
      Type=Application
      Categories=Office Network FileTransfer FileSystem Security
      MimeType=x-scheme-handler/$PARSEC_SCHEME;
      EOF

  # Ideally, the gtk platform (i.e. gnome-platform) should be provided by snapcraft by using extensions.
  # However, it is not available under `classic` confinement.
  gtk-platform:
    plugin: nil
    stage-packages:
      - libgtk-3-0
      - libgbm1
      - libasound2
      - libnss3
    build-attributes:
      - enable-patchelf
    stage:
      - usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}
      - -usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libssl3.so # Already provided by core22.
      - -usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libicutest.so* # International Components for Unicode test lib.
      - -usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libcolordprivate.so* # Colord daemon private lib.
      - usr/share/X11
      - usr/share/icons
      - usr/share/mime
      - usr/sbin/update-icon-caches
    prime:
      - -usr/share/doc
      - -usr/share/pkgconfig
    override-build: |
      mkdir -p "$CRAFT_PART_INSTALL"/data-dir

  desktop-helpers:
    plugin: make
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-type: git
    source-commit: ec861254c2a1d2447b2c589446e6cdf04c75c260
    prime:
      - bin/desktop-launch-wrapper
      - bin/desktop-launch
      - flavor-select
    override-build: |
      cd gtk
      make -j build

      cat > command.sh << EOF
      #!/bin/bash -e
      exec "\$SNAP/bin/desktop-launch-wrapper" "\$SNAP/app/parsec" "\$@" --no-sandbox
      EOF

      mkdir -p "$CRAFT_PART_INSTALL"/bin
      install -v --mode=755 desktop-launch "$CRAFT_PART_INSTALL"/bin/desktop-launch-wrapper
      install -v --mode=755 command.sh "$CRAFT_PART_INSTALL"/bin/desktop-launch
      install -v --mode=644 flavor-select "$CRAFT_PART_INSTALL"/flavor-select
