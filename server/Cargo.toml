[package]
name = "parsec"
publish.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
version.workspace = true
repository.workspace = true

[lints]
workspace = true

[lib]
name = "parsec"
crate-type = ["cdylib"]

[features]
# Remember kid: RustCrypto is used if `use-sodiumoxide` is not set !
use-sodiumoxide = ["libparsec_crypto/use-sodiumoxide"]
vendored-openssl = ["libparsec_crypto/vendored-openssl"]
test-utils = [
    "dep:libparsec_testbed",
    "libparsec_types/test-mock-time",
]

[dependencies]
libparsec_crypto = { workspace = true }
libparsec_protocol = { workspace = true }
libparsec_serialization_format = { workspace = true, features = ["python-bindings-support"] }
# TODO: `use-zstd-in-serialization-format` is a temporary feature to disable the
#       use of zstd, as its compilation with WASM is buggy on some host (e.g.
#       MacOS/Windows/Ubuntu 20.04).
#       TL;DR: ALWAYS ENABLE `use-zstd-in-serialization-format` FOR PRODUCTION !!!
libparsec_types = { workspace = true, features = ["use-zstd-in-serialization-format"] }
libparsec_testbed = { workspace = true, optional = true }

regex = { workspace = true, features = ["std", "perf", "unicode"] }
paste = { workspace = true }
pyo3 = { workspace = true, features = ["multiple-pymethods", "extension-module", "macros"] }
uuid = { workspace = true, features = ["serde", "v4", "fast-rng"] }
tokio = { workspace = true, features = ["rt-multi-thread"] }
lazy_static = { workspace = true }
futures = { workspace = true, features = ["std", "async-await", "executor"] }
rmp-serde = { workspace = true }
serde = { workspace = true, features = ["derive"] }
chrono = { workspace = true }
