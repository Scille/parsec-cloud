name: pre-commit
description: install & run-precommit

inputs:
  version:
    description: Rust version to use
    required: true

  components:
    description: Extra component to install with rustup
    required: false
    default: rustfmt, clippy

  profile:
    description: Execute `rustup set profile {value}` before installing the toolchain, ex. `minimal`
    required: false
    default: minimal

  cache-key:
    description: key added to the internal cache key
    required: false
    default: cache

outputs:
  cache-hit:
    description: A boolean value to indicate an exact match was found for the key.
    value: ${{ steps.cache-rust.outputs.cache-hit }}

  rustc:
    description: Rustc version
    value: ${{ steps.rust-toolchain.outputs.rustc }}

  cargo:
    description: Cargo version
    value: ${{ steps.rust-toolchain.outputs.cargo }}

  rustup:
    description: Rustup version
    value: ${{ steps.rust-toolchain.outputs.rustup }}

runs:
  using: composite
  steps:
    - name: Cache Rust
      id: cache-rust
      uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # pin v3.0.4
      with:
        key: ${{ runner.os }}-rust-${{ inputs.version }}-${{ inputs.cache-key }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-rust-${{ inputs.version }}-${{ inputs.cache-key }}
        path: |
          target
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db

    - name: Install rust toolchain
      id: rust-toolchain
      uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # pin v1.0.6
      with:
        toolchain: ${{ inputs.version }}
        components: ${{ inputs.components }}
        override: true
