name: setup-rust
description: install rust toolchain

inputs:
  version:
    description: Rust version to use
    required: true

  components:
    description: Comma-separated string of additional components to install e.g. `clippy`, `rustfmt`
    required: false

  profile:
    description: Execute `rustup set profile {value}` before installing the toolchain, ex. `minimal`
    required: false
    default: minimal

  cache-key:
    description: key added to the internal cache key
    required: false
    default: cache

  target:
    description: Comma-separated string of additional targets to install e.g. `wasm32-unknown-unknown`
    required: false

  os:
    description: Operating system name
    required: true
    default: ${{ runner.os }}

outputs:
  cache-hit:
    description: A boolean value to indicate an exact match was found for the key.
    value: ${{ steps.cache-rust.outputs.cache-hit }}

  cache-key:
    description: Rust toolchain cache key.
    value: ${{ steps.rust-toolchain.outputs.cachekey }}

runs:
  using: composite
  steps:
    - name: Sanitize inputs to be used in cache key
      id: sanitize
      shell: bash
      run:
        echo 'components=${{ inputs.components }}' | sed 's/, */-/g' >> $GITHUB_OUTPUT

    - name: Cache Rust tools
      id: cache-rust-tools
      uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin v3.0.11
      with:
        key: ${{ inputs.os }}_rust-tools_${{ inputs.version }}_${{ steps.sanitize.outputs.components }}_${{ inputs.target }}
        path: |
          ~/.cargo/bin

    - name: Cache Rust
      id: cache-rust
      uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin v3.0.11
      with:
        key: ${{ inputs.os }}_rust-dependencies_${{ inputs.version }}_${{ inputs.target }}_${{ inputs.cache-key }}_${{ hashFiles('**/Cargo.lock') }}
        path: |
          target
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db

    - name: Install rust toolchain
      id: rust-toolchain
      uses: dtolnay/rust-toolchain@55c7845fad90d0ae8b2e83715cb900e5e861e8cb
      with:
        toolchain: ${{ inputs.version }}
        components: ${{ inputs.components }}
        targets: ${{ inputs.target }}

    - name: Debug cache-key from toolchain install
      run: echo ${{ steps.rust-toolchain.outputs.cachekey }}
      shell: bash
