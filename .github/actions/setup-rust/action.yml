name: setup-rust
description: install rust toolchain

inputs:
  version:
    description: Rust version to use
    required: true

  components:
    description: Comma-separated string of additional components to install e.g. `clippy`, `rustfmt`
    required: false
    default: rustfmt, clippy

  profile:
    description: Execute `rustup set profile {value}` before installing the toolchain, ex. `minimal`
    required: false
    default: minimal

  cache-key:
    description: key added to the internal cache key
    required: false
    default: cache

  target:
    description: Comma-separated string of additional targets to install e.g. `wasm32-unknown-unknown`
    required: false

outputs:
  cache-hit:
    description: A boolean value to indicate an exact match was found for the key.
    value: ${{ steps.cache-rust.outputs.cache-hit }}

  cache-key:
    description: Rust toolchain cache key.
    value: ${{ steps.rust-toolchain.outputs.cachekey }}

runs:
  using: composite
  steps:
    - name: Cache Rust
      id: cache-rust
      uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # pin v3.0.4
      with:
        key: ${{ runner.os }}-rust-${{ inputs.version }}-${{ inputs.cache-key }}-${{ hashFiles('**/Cargo.lock') }}
        path: |
          target
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db

    - name: Install rust toolchain
      id: rust-toolchain
      uses: dtolnay/rust-toolchain@2e4fc08e24c79a982d0b6f4638011718d61c0eee
      with:
        toolchain: ${{ inputs.version }}
        components: ${{ inputs.components }}
        targets: ${{ inputs.target }}

    - name: Debug cache-key from toolchain install
      run: echo ${{ steps.rust-toolchain.outputs.cachekey }}
      shell: bash
