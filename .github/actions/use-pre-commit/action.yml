name: pre-commit
description: install & run-precommit

inputs:
  extra-args:
    description: options to pass to pre-commit run-precommit
    required: false
    default: ""
  config-file:
    description: where is located the pre-commit config file
    required: false
    default: .pre-commit-config.yaml
  version:
    description: pre-commit version to use
    required: false
    default: 3.7.1 # __VERSION__
  install-only:
    description: Only install pre-commit without running it.
    required: false
    default: "false"
  install-dir:
    description: Path where to install pre-commit.
    required: false
    default: ~/.cache/pre-commit

outputs:
  cache-hit:
    description: A boolean value to indicate an exact match was found for the key.
    value: ${{ steps.cache-pre-commit.outputs.cache-hit }}
  install-path:
    description: A path where pre-commit.pyz is installed
    value: ${{ inputs.install-dir }}/pre-commit.pyz
  suggested-args:
    description: Suggested args to run pre-commit on the minimum of files.
    value: ${{ steps.suggested-run.outputs.args }}

runs:
  using: composite
  steps:
    - name: Cache pre-commit install
      id: cache-pre-commit
      uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # pin v4.2.1
      with:
        key: pre-commit-${{ inputs.version }}-${{ hashFiles(inputs.config-file) }}
        path: |
          ${{ inputs.install-dir }}

    # Install pre-commit as a standalone .pyz archive that can be run by Python
    - name: Install pre-commit
      id: install-precommit
      if: steps.cache-pre-commit.outputs.cache-hit != 'true'
      shell: bash -eux {0}
      run: |
        mkdir -p ${{ inputs.install-dir }}
        curl --proto '=https' --tlsv1.2 -sSL \
          https://github.com/pre-commit/pre-commit/releases/download/v${{ inputs.version }}/pre-commit-${{ inputs.version }}.pyz \
          > ${{ inputs.install-dir }}/pre-commit.pyz

    - name: Debug installed python package
      run: |
        python --version
        python ${{ inputs.install-dir }}/pre-commit.pyz --version
      shell: bash

    - name: Minimal pre-commit work
      id: suggested-run
      shell: bash
      run: |
        echo 'Suggested pre-commit args:'
        (
          case "${{ github.event_name }}" in
            pull_request)
              # Ensure base ref is in the git tree
              git fetch origin ${{ github.base_ref }} >&2
              echo "args=--origin=HEAD --source=origin/${{ github.base_ref }}"
            ;;
            *)
              echo "args=--all-files"
            ;;
          esac
        ) | tee -a $GITHUB_OUTPUT

    - name: Run pre-commit
      if: inputs.install-only != 'true'
      shell: bash -ex {0}
      run: |
        python \
          ${{ inputs.install-dir }}/pre-commit.pyz \
          run \
          --verbose \
          --show-diff-on-failure \
          --color=always \
          $EXTRA_ARGS
      env:
        EXTRA_ARGS: >-
          ${{ inputs.config-file != '' && format('--config {0}', inputs.config-file) || '' }}
          ${{ steps.suggested-run.outputs.args }}
          ${{ inputs.extra-args }}
