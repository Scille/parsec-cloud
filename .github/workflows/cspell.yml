name: cspell

on:
  workflow_call:
  workflow_dispatch:

# We set `concurrency` to prevent having this workflow being run on code that is not up-to-date on a PR (a user make multiple push in a quick manner).
# But on the main branch, we don't want that behavior.
# Having the workflow run on each merge commit is something we would like, that could help us where a regression was made and missed by previous checks.
#
# For that we use `head_ref` that is only defined on `pull-request` and fallback to `run_id` (this is a counter, so it's value is unique between workflow call).
concurrency:
  group: cspell-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  cspell:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin v4.2.2
        timeout-minutes: 5

      - name: Generate cspell cache key
        id: cache-key
        run: |
          from datetime import datetime
          import os

          now = datetime.today()

          version = 0
          partial_key = f"cspell-v{version}"
          restore_keys = [partial_key + "-"]
          for chunk in [ os.environ["CSPELL_CFG_HASH"], *now.strftime('%Y-%m-%d-%H-%M').split('-') ]:
              partial_key += "-" + chunk
              restore_keys.append(partial_key)
          key = partial_key
          restore_keys.reverse()

          print(f"key={key}")
          print(f"restore_keys={restore_keys}")
          with open(os.environ["GITHUB_OUTPUT"], 'a') as f:
              # For multiple line in a github output variable
              # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
              f.write('restore-keys<<End_Of_Restore_Keys\n{}\nEnd_Of_Restore_Keys\n'.format('\n'.join(restore_keys)))
              f.write(f'key={key}\n')
        shell: python
        env:
          CSPELL_CFG_HASH: ${{ hashFiles('.cspell/**') }}

      - name: Restore cspell cache
        id: cache
        uses: actions/cache/restore@d4323d4df104b026a6aa633fdb11d772146be0bf # pin v4.2.2
        with:
          path: |
            package-lock.json
            package.json
            .cspellcache
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: ${{ steps.cache-key.outputs.restore-keys }}

      - name: Install required extra dictionaries
        if: steps.cache.outputs.cache-hit != 'true'
        id: installation
        run: |
          cp .cspell/package{,-lock}.json .
          npm clean-install
          echo "previous-cache-hash=${{ hashFiles('.cspellcache') }}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Check spelling in the repository
        id: cspell
        uses: streetsidesoftware/cspell-action@8485bb4b688c68384c2f6db7ad931f5e3e63f21c # pin v6.10.1
        with:
          config: .cspell/cspell.config.yml
          # Only check for changed files on a PR
          # But check on all files on the main branch & the merge queue
          incremental_files_only: ${{ github.ref != 'refs/heads/master' && contains(github.ref, 'gh-readonly-queue') != 'true' }}
          check_dot_files: true

      - name: Show result
        run: printenv RESULT | jq -r .
        env:
          RESULT: ${{ toJSON(steps.cspell.outputs) }}

      - name: Save cspell cache
        if: >-
          steps.installation.outputs.previous-cache-hash != hashFiles('.cspellcache')
          && contains(github.ref, 'gh-readonly-queue') != 'true'
        uses: actions/cache/save@d4323d4df104b026a6aa633fdb11d772146be0bf # pin v4.2.2
        with:
          key: ${{ steps.cache-key.outputs.key }}
          path: |
            package-lock.json
            package.json
            .cspellcache
