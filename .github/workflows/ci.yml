name: ci

on:
  workflow_dispatch:
  merge_group:
  pull_request:
  push:
    branches:
      - master

env:
  python-version: "3.9"
  # We use the version 18.12 because the version >= 18.13 have some breaking changes on how they format the date.
  # That would break our unit test if we don't update them.
  node-version: 18.12.0
  poetry-version: 1.3.2
  # Cargo will be faster with this configuration.
  # It will only update it's index for the dependencies that we use.
  # https://blog.rust-lang.org/2023/03/09/Rust-1.68.0.html#cargos-sparse-protocol
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:

  # Github PR merging is configured to only require this job to pass
  ci-is-happy:
    name: ⭐ CI is happy ⭐
    needs:
      - check-quality-assurance
      - test-python-matrix
      - test-rust-matrix
      # Disabled till we fix Cypress tests with Vite
      # see issue: #4393
      # see issue: #4394
      # - test-web-app
      - check-spelling
    runs-on: ubuntu-latest
    if: always()
    # Just a fail-safe timeout, see the fine grain per-task timeout instead
    timeout-minutes: 2
    steps:
      # The Needs context value contains only:
      # - the final state a jobs (if it fails or not)
      # - it's output (actually none of our jobs are configuring outputs variable)
      #
      # https://docs.github.com/en/actions/learn-github-actions/contexts#needs-context
      - name: Debug the needs context values
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: printenv NEEDS

      - name: We're very sorry
        run: |
          echo "Oh No, we have jobs that have failed/cancelled/skipped :("
          exit 42
        if: >-
          contains(needs.*.result, 'failure')
          || contains(needs.*.result, 'skipped')
          || contains(needs.*.result, 'cancelled')
          || ! contains(needs.*.result, 'success')

      - name: It's showtime
        run: echo "My job here is done !"

  check-spelling:
    uses: ./.github/workflows/cspell.yml

  ##############################################################################
  #                                   📊 Q&A                                   #
  ##############################################################################

  check-quality-assurance:
    name: 📊 Q&A
    # All linux jobs must run the same ubuntu version to avoid Rust caching issues !
    runs-on: ubuntu-20.04
    # Just a fail-safe timeout, see the fine grain per-task timeout instead
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin v3.5.0
        timeout-minutes: 5

      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50  # pin v2.11.1
        id: newsfragment-have-changed
        with:
          list-files: shell
          filters: |
            all:
              - added|modified: '**'
            newsfragments:
              - newsfragments/**

      - uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.python-version }}
          poetry-version: ${{ env.poetry-version }}
        timeout-minutes: 5

      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c  # pin v3.6.0
        with:
          node-version: ${{ env.node-version }}
        timeout-minutes: 2

      - name: Check Commit Signature
        run: python .github/scripts/check_commit_signature.py

      - name: Check News fragments
        if: |
          startsWith(github.ref, 'refs/pull/')
          && !(
            startsWith(github.head_ref, 'yolo')
            || startsWith(github.head_ref, 'release')
            || startsWith(github.head_ref, 'revert')
            || startsWith(github.head_ref, 'acknowledge')
            )
          && steps.newsfragment-have-changed.outputs.newsfragments == 'true'
        run: |
          whereis git
          git fetch origin master
          python .github/scripts/check_newsfragments.py ${{ github.head_ref }}
        timeout-minutes: 5

      - name: Patch pre-commit for line-ending
        id: patched-pre-commit-config
        run: |
          TEMP_FILE=$(mktemp)
          sed '/id: mixed-line-ending/a\        args: [ --fix=lf ]' .pre-commit-config.yaml > $TEMP_FILE
          diff --unified .pre-commit-config.yaml $TEMP_FILE || true
          echo "path=$TEMP_FILE" >> $GITHUB_OUTPUT

      - name: Install project (needed for mypy check)
        run: |
          set -ex
          poetry install -E core -E backend
        # We skip _parsec.so compilation given Mypy only cares about _parsec.pyi
        env:
          POETRY_LIBPARSEC_BUILD_STRATEGY: no_build
        timeout-minutes: 10

      # Clippy basically compile the project, hence it's faster to run it in
      # the test-rust-matrix job where compilation cache is reused !
      - uses: ./.github/actions/use-pre-commit
        with:
          # On main branch or in the merge queue we provide an empty string for the changes files,
          # thus running pre-commit on all files
          changed-files: >-
            ${{
              (github.ref == 'refs/heads/master'
              || contains(github.ref, 'gh-readonly-queue')) && '' || steps.changes.outputs.all_files
            }}
          config-file: ${{ steps.patched-pre-commit-config.outputs.path }}
        env:
          SKIP: clippy,fmt,cspell
        timeout-minutes: 30

  test-python-matrix:
    uses: ./.github/workflows/ci-python.yml

  test-rust-matrix:
    uses: ./.github/workflows/ci-rust.yml

  test-web-app:
    # Disabled till we fix Cypress tests with Vite, see issue: #4393 & #4394
    if: false
    uses: ./.github/workflows/ci-web.yml
