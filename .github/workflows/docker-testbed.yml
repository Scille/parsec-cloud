name: Build & Publish docker testbed

# cspell:words buildx

on:
  # This job must be manually triggered to publish a new version usable from
  # other CI runs.
  # (see https://github.com/Scille/parsec-cloud/pkgs/container/parsec-cloud%2Fparsec-testbed-server)
  workflow_dispatch:
  pull_request:
    paths:
      # Testbed code also depends on `libparsec/**`, but this code change very often
      # and we consider the server tests are good enough on this part.
      - server/packaging/testbed-server/**
      - .github/workflows/docker-testbed.yml
  push:
    branches:
      - master
    paths:
      # Testbed code also depends on `libparsec/**`, but this code change very often
      # and we consider the server tests are good enough on this part.
      - server/packaging/testbed-server/**
      - .github/workflows/docker-testbed.yml

permissions:
  contents: write
  packages: write

# We set `concurrency` to prevent having this workflow being run on code that is not up-to-date on a PR (a user make multiple push in a quick manner).
# But on the main branch, we don't want that behavior.
# Having the workflow run on each merge commit is something we would like, that could help us where a regression was made and missed by previous checks.
concurrency:
  group: docker-testbed-${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  docker-testbed:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin v4.1.1
        timeout-minutes: 5

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0

      - name: Log in to the Github Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version
        id: version
        run: >-
          PYTHONPATH=. python3
          misc/releaser.py version --uniq-dev
          | tee -a $GITHUB_OUTPUT
        timeout-minutes: 1

      - name: Generate build metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        id: metadata
        with:
          images:
            ghcr.io/scille/parsec-cloud/parsec-testbed-server
          tags: |
            type=raw,value=${{ steps.version.outputs.docker }}
          flavor: |
            latest=${{ github.event_name == 'workflow_dispatch' }}

      - name: Build and export to Docker
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        id: build
        with:
          context: .
          file: server/packaging/testbed-server/testbed-server.dockerfile
          load: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: false
        timeout-minutes: 20

      - name: Start docker test container
        id: test-container
        run: |
          (
            echo -n "id=";
            docker run --detach --publish 6777:6777 --rm --name=parsec-testbed-server ${{ steps.build.outputs.imageid }}
          ) | tee $GITHUB_OUTPUT
        timeout-minutes: 1

      - name: Test docker image
        run: python .github/scripts/test-server.py
        timeout-minutes: 1

      - name: Stop docker test container
        run: docker container stop ${{ steps.test-container.outputs.id }}
        timeout-minutes: 1

      - name: Image to be published
        run: echo "${{ steps.metadata.outputs.tags }}"

      - name: Build and publish
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          file: server/packaging/testbed-server/testbed-server.dockerfile
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
        timeout-minutes: 5
