name: parsec
version: 2.15.0-dev
summary: Secure cloud framework # 79 char long summary
description: |
  Parsec is an open-source cloud-based application that allow simple yet
  cryptographically secure file hosting.
base: core20
type: app

confinement: classic # classic is needed to have fuse working
icon: ./bin/parsec.png
grade: stable # must be 'stable' to release into candidate/stable channels

apps:
  parsec:
    command: parsec
    desktop: parsec.desktop
    environment:
      PARSEC_SENTRY_DSN: https://863e60bbef39406896d2b7a5dbd491bb@o155936.ingest.sentry.io/1212848
      PREFERRED_ORG_CREATION_BACKEND_ADDR: parsec://saas.parsec.cloud/
  cli:
    command: parsec-cli
    environment:
      PARSEC_SENTRY_DSN: https://863e60bbef39406896d2b7a5dbd491bb@o155936.ingest.sentry.io/1212848
      PREFERRED_ORG_CREATION_BACKEND_ADDR: parsec://saas.parsec.cloud/

parts:
  bootstrap:
    plugin: dump
    source: ./bin
    override-build: |
      # Make sure executables *are* executable
      chmod a=rx parsec parsec-cli

      snapcraftctl build

  python-build:
    plugin: nil
    # What is `install-only` package ?
    # see https://python-build-standalone.readthedocs.io/en/latest/distributions.html?highlight=install-only#install-only-archive
    # TL,DR: The fastest build with only the generated artifact (bin, lib, include & man).
    source: https://github.com/indygreg/python-build-standalone/releases/download/20220227/cpython-3.9.10+20220227-x86_64-unknown-linux-gnu-install_only.tar.gz
    source-checksum: sha256/455089cc576bd9a58db45e919d1fc867ecdbb0208067dffc845cc9bbf0701b70
    source-type: tar
    override-build: |
      snapcraftctl build
      cp -R bin lib include ${SNAPCRAFT_PART_INSTALL}
    filesets:
      python-bin:
        # This is a symlink to `python3.9`
        - bin/python3
        - bin/python3.9
      pip-bin:
        - bin/pip3
        - bin/pip3.9
      python-shared-lib:
        - lib/libpython3.9.so
        - lib/libpython3.9.so.*
        - lib/libpython3.so
        - lib/python3.9
        - -lib/python3.9/test
        - -lib/python3.9/**/test
        - -lib/python3.9/**/__pycache__
        - -lib/python3.9/config-3.9-x86_64-linux-gnu
      python-include:
        - include/python3.9
    stage:
      - $python-bin
      - $pip-bin
      - $python-shared-lib
      # We need the C headers
      # It will be needed by `duckpy`
      - $python-include
    prime:
      - $python-bin
      - $pip-bin
      - $python-shared-lib

  parsec-core:
    plugin: nil
    source: ./src
    source-type: local
    after:
      - python-build
    override-build: |
      set -x
      snapcraftctl build

      # Snapcraft's python plugin doesn't work well with classic mode,
      # hence we have to roll our own packaging trick:
      # - we manually copy Parsec & dependencies into a directory
      # - we ask snapcraft to bundle the python version we want
      # - we overload PYTHONPATH at runtime so that python finds our modules

      # Add the python bin that we've build in the step above.
      export PATH="${SNAPCRAFT_STAGE}/bin:$PATH"

      # Required for `duckpy`:
      # Tell `gcc` to look in `stage/include/python3.9` for the `Python.h` headers
      export C_INCLUDE_PATH="${SNAPCRAFT_STAGE}/include/python3.9"

      # Ensure we use the expected python version.
      python3 --version | grep 'Python 3.9.10'

      VENV=${SNAPCRAFT_PART_BUILD}/venv

      # Install Parsec & dependencies in a virtual env...
      python3 -m venv ${VENV}  # must use absolute path here
      ${VENV}/bin/python -m pip --version

      # Update pip given the one on the system is most likely too old...
      ${VENV}/bin/python -m pip install --upgrade pip wheel
      ${VENV}/bin/python -m pip --version

      WHEEL=$(ls ./parsec_cloud-*.whl)

      ${VENV}/bin/python -m pip install --requirement ./core-requirements.txt
      ${VENV}/bin/python -m pip install $WHEEL[core] --no-deps

      # ...then only keep the installed packages from the virtual env
      # this is fine given the same python is used between build and runtime
      cp -R ${VENV}/lib/python3.9/site-packages ${SNAPCRAFT_PART_INSTALL}/site-packages

    filesets:
      site-packages:
        - site-packages
        # And now for the grand PyQt5 cooking !
        # This aggressive remove of all possible .so has two objectives:
        # - Saving size
        # - more importantly, reducing the number of dependencies that must be
        #   shipped with the snap given they are a real headache to figure out :/
        # 1) Remove stuff not needed during runtime
        # Bindings declaration
        - -site-packages/PyQt5/bindings
        # UI compiler
        - -site-packages/PyQt5/uic
        # Type hints
        - -site-packages/PyQt5/*.pyi
        # Resources compiler
        - -site-packages/PyQt5/pyrcc.*.so
        - -site-packages/PyQt5/pyrcc_main.py
        # Translation compiler
        - -site-packages/PyQt5/pylupdate.*.so
        - -site-packages/PyQt5/pylupdate_main.py
        # 2) Remove unused Qt modules
        # We use in the codebase: QtWidgets, QtCore, QtGui, QtSvg
        # On top of that we also keep QtDbus that is needed in platform support
        # TODO: Some so are still present in `site-packages/PyQt5` like Bluetooth, Multimedia
        # We may even shrink down the snap a little more ;)
        - -site-packages/PyQt5/**/*Bluetooth.*so*
        - -site-packages/PyQt5/Qt5/qml/QtBluetooth
        - -site-packages/PyQt5/**/*Designer.*so*
        - -site-packages/PyQt5/**/*Help.*so*
        - -site-packages/PyQt5/**/*Location.*so*
        - -site-packages/PyQt5/Qt5/qml/QtLocation
        - -site-packages/PyQt5/Qt5/qml/Qt/labs/location
        - -site-packages/PyQt5/**/*Multimedia.*so*
        - -site-packages/PyQt5/Qt5/qml/QtMultimedia
        - -site-packages/PyQt5/**/*MultimediaWidgets.*so*
        - -site-packages/PyQt5/**/*MultimediaGstTools.*so*
        - -site-packages/PyQt5/**/*Network.*so*
        - -site-packages/PyQt5/**/*Nfc.*so*
        - -site-packages/PyQt5/Qt5/qml/QtNfc
        - -site-packages/PyQt5/**/*OpenGL.*so*
        - -site-packages/PyQt5/**/*Positioning.*so*
        - -site-packages/PyQt5/Qt5/qml/QtPositioning
        - -site-packages/PyQt5/**/*Qml.*so*
        - -site-packages/PyQt5/Qt5/qml/QtQml
        - -site-packages/PyQt5/**/*QmlWorkerScript.*so*
        - -site-packages/PyQt5/**/*QmlModules.*so*
        - -site-packages/PyQt5/**/*QmlModels.*so*
        - -site-packages/PyQt5/**/*Quick.*so*
        - -site-packages/PyQt5/Qt5/qml/QtQuick*
        - -site-packages/PyQt5/**/*QuickTemplates2.*so*
        - -site-packages/PyQt5/**/*QuickControls2.*so*
        - -site-packages/PyQt5/**/*QuickShapes.*so*
        - -site-packages/PyQt5/**/*Quick3D.*so*
        - -site-packages/PyQt5/**/*Quick3DRuntimeRender.*so*
        - -site-packages/PyQt5/**/*Quick3DUtils.*so*
        - -site-packages/PyQt5/**/*Quick3DRender.*so*
        - -site-packages/PyQt5/**/*QuickParticles.*so*
        - -site-packages/PyQt5/Qt5/qml/QtQuick3D
        - -site-packages/PyQt5/**/*Quick3DAssetImport.*so*
        - -site-packages/PyQt5/**/*QuickWidgets.*so*
        - -site-packages/PyQt5/**/*RemoteObjects.*so*
        - -site-packages/PyQt5/Qt5/qml/QtRemoteObjects
        - -site-packages/PyQt5/**/*Sensors.*so*
        - -site-packages/PyQt5/Qt5/qml/QtSensors
        - -site-packages/PyQt5/**/*SerialPort.*so*
        - -site-packages/PyQt5/**/*Sql.*so*
        - -site-packages/PyQt5/**/*Test.*so*
        - -site-packages/PyQt5/Qt5/qml/QtTest
        - -site-packages/PyQt5/**/*TextToSpeech.*so*
        - -site-packages/PyQt5/**/*WebChannel.*so*
        - -site-packages/PyQt5/Qt5/qml/QtWebChannel
        - -site-packages/PyQt5/**/*WebSockets.*so*
        - -site-packages/PyQt5/Qt5/qml/QtWebSockets
        - -site-packages/PyQt5/**/*WebView.*so*
        - -site-packages/PyQt5/Qt5/qml/QtWebView
        - -site-packages/PyQt5/**/*X11Extras.*so*
        - -site-packages/PyQt5/**/*Xml.*so*
        - -site-packages/PyQt5/**/*XmlPatterns.*so*
        - -site-packages/PyQt5/Qt5/qml/QtGraphicalEffects
        - -site-packages/PyQt5/Qt5/qml/Qt/labs
        # FIXME: libqeglfs is missing `libQt5EglFSDeviceIntegration.so.5` & `libQt5EglFsKmsSupport.so.5` which seems to not be provided the PyQt5
        - -site-packages/PyQt5/Qt5/plugins/platforms/libqeglfs.so
        - -site-packages/PyQt5/Qt5/plugins/egldeviceintegrations
        - -site-packages/PyQt5/_QOpenGLFunctions_*.*.so
        # Remove extensions that requires module we removed
        - -site-packages/PyQt5/Qt5/plugins/assetimporters/libassimp.so
        - -site-packages/PyQt5/Qt5/plugins/assetimporters/libuip.so
        - -site-packages/PyQt5/Qt5/plugins/audio/libqtaudio_alsa.so
        - -site-packages/PyQt5/Qt5/plugins/audio/libqtmedia_pulse.so
        - -site-packages/PyQt5/Qt5/plugins/bearer/libqconnmanbearer.so
        - -site-packages/PyQt5/Qt5/plugins/bearer/libqgenericbearer.so
        - -site-packages/PyQt5/Qt5/plugins/bearer/libqnmbearer.so
        - -site-packages/PyQt5/Qt5/plugins/generic/libqtuiotouchplugin.so
        - -site-packages/PyQt5/Qt5/plugins/geometryloaders/libdefaultgeometryloader.so
        - -site-packages/PyQt5/Qt5/plugins/geometryloaders/libgltfgeometryloader.so
        - -site-packages/PyQt5/Qt5/plugins/geoservices/libqtgeoservices_esri.so
        - -site-packages/PyQt5/Qt5/plugins/geoservices/libqtgeoservices_itemsoverlay.so
        - -site-packages/PyQt5/Qt5/plugins/geoservices/libqtgeoservices_mapbox.so
        - -site-packages/PyQt5/Qt5/plugins/geoservices/libqtgeoservices_mapboxgl.so
        - -site-packages/PyQt5/Qt5/plugins/geoservices/libqtgeoservices_nokia.so
        - -site-packages/PyQt5/Qt5/plugins/geoservices/libqtgeoservices_osm.so
        - -site-packages/PyQt5/Qt5/plugins/mediaservice/libgstaudiodecoder.so
        - -site-packages/PyQt5/Qt5/plugins/mediaservice/libgstcamerabin.so
        - -site-packages/PyQt5/Qt5/plugins/mediaservice/libgstmediacapture.so
        - -site-packages/PyQt5/Qt5/plugins/mediaservice/libgstmediaplayer.so
        - -site-packages/PyQt5/Qt5/plugins/platforms/libqvnc.so
        - -site-packages/PyQt5/Qt5/plugins/platforms/libqwebgl.so
        - -site-packages/PyQt5/Qt5/plugins/platformthemes/libqgtk3.so
        - -site-packages/PyQt5/Qt5/plugins/playlistformats/libqtmultimedia_m3u.so
        - -site-packages/PyQt5/Qt5/plugins/position/libqtposition_geoclue.so
        - -site-packages/PyQt5/Qt5/plugins/position/libqtposition_geoclue2.so
        - -site-packages/PyQt5/Qt5/plugins/position/libqtposition_positionpoll.so
        - -site-packages/PyQt5/Qt5/plugins/position/libqtposition_serialnmea.so
        - -site-packages/PyQt5/Qt5/plugins/printsupport/libcupsprintersupport.so
        - -site-packages/PyQt5/Qt5/plugins/renderers/libopenglrenderer.so
        - -site-packages/PyQt5/Qt5/plugins/renderplugins/libscene2d.so
        - -site-packages/PyQt5/Qt5/plugins/sceneparsers/libgltfsceneexport.so
        - -site-packages/PyQt5/Qt5/plugins/sceneparsers/libgltfsceneimport.so
        - -site-packages/PyQt5/Qt5/plugins/sensorgestures/libqtsensorgestures_plugin.so
        - -site-packages/PyQt5/Qt5/plugins/sensorgestures/libqtsensorgestures_shakeplugin.so
        - -site-packages/PyQt5/Qt5/plugins/sensors/libqtsensors_generic.so
        - -site-packages/PyQt5/Qt5/plugins/sensors/libqtsensors_iio-sensor-proxy.so
        - -site-packages/PyQt5/Qt5/plugins/sensors/libqtsensors_linuxsys.so
        - -site-packages/PyQt5/Qt5/plugins/sqldrivers/libqsqlite.so
        - -site-packages/PyQt5/Qt5/plugins/sqldrivers/libqsqlodbc.so
        - -site-packages/PyQt5/Qt5/plugins/sqldrivers/libqsqlpsql.so
        - -site-packages/PyQt5/Qt5/plugins/texttospeech/libqtexttospeech_speechd.so
        - -site-packages/PyQt5/Qt5/plugins/webview/libqtwebview_webengine.so
        - -site-packages/PyQt5/Qt5/plugins/gamepads
      stage-lib:
        - usr/lib/x86_64-linux-gnu
        - lib/x86_64-linux-gnu
    stage:
      - $site-packages
      - $stage-lib
    prime:
      - $site-packages
      - $stage-lib
    # Why so much packages ?
    # Well because we use a Python that comes with the bare minimum to save space.
    # The packages listed here are required by the additional python packages we install on the snap.
    # Note:
    # Recent version of `snapcraft` provide you with a list of missing shared lib.
    # The previous method to get the list was:
    # > This list has been generated doing (with a bit of manual tweaking):
    # > apt-cache depends --recurse  --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances python3.9
    build-packages:
      - clang
    stage-packages:
      - libfontconfig1
      - libfreetype6
      # Qt5 has a lot of dependencies (e.g. libxcb, libx) and it's easy to
      # miss some. It seems those are enough, but this is purely speculative...
      - libx11-xcb1
      - libwayland-cursor0
      - libwayland-egl1
      - libxcomposite1
      - libasound2
      - libdrm2
      - libpulse-mainloop-glib0
      - libpulse0
      - libxcb-glx0
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-render-util0
      - libxcb-render0
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-sync1
      - libxcb-util1
      - libxcb-xfixes0
      - libxcb-xinerama0
      - libxcb-xkb1
      - libxkbcommon-x11-0
      - libxkbcommon0
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      # Provide `libQt5EglFSDeviceIntegration` & `libQt5EglFsKmsSupport` required by `plugins/platforms/libqeglfs` & `plugins/egldeviceintegrations`
      # TODO: This is not included right now because the qt5 version of that package is not compatible to pyqt5.
      # - libqt5gui5
      # OpenGL and friends seem needed for some widgets...
      - libgl1
      - libegl1
      # fuse package contains fusermount which is sometime needed by libfuse2
      # (see: https://github.com/Scille/parsec-cloud/issues/1253)
      - fuse
      - libfuse2
