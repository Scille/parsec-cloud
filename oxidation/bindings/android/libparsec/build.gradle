plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id "org.mozilla.rust-android-gradle.rust-android" version "0.9.3"
}

android {
    compileSdk rootProject.ext.compileSdkVersion
    ndkVersion rootProject.ext.ndkVersion

    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module = "./rust"
    targets = ["arm", "x86", "x86_64", "arm64"]
    libname = "libparsec_bindings_android"
    targetDirectory = "../../../../target/"
}

tasks.whenTaskAdded { task ->
    if (System.getenv('GRADLE_LIBPARSEC_BUILD_STRATEGY') == 'no_build') {
        return
    }
    // See https://github.com/mozilla/rust-android-gradle/issues/85
    // if ((task.name == 'javaPreCompileDebug' || task.name == 'javaPreCompileRelease')) {
    if ((task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders')) {
        task.dependsOn 'cargoBuild'
    }
}
