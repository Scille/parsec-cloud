[package]
name = "libparsec_types"
version = "0.0.0"
edition = "2021"
license = " BUSL-1.1"

[features]
# TODO: this feature is never referenced, is it useful ?
js = ["uuid/js"]
test-mock-time = []
test-fixtures = ["dep:hex-literal", "dep:rstest"]

[dependencies]
libparsec_crypto = { path = "../crypto" }
libparsec_serialization_format = { path = "../serialization_format" }
libparsec_platform_async = { path = "../platform_async" }

lazy_static = "1.4.0"
serde = { version = "1.0.147", features = ["derive"] }
serde_with = "2.3.2"
rmp-serde = "1.1.1"
serde_bytes = "0.11.9"
chrono = "0.4.26"
# By default uuid crate uses `getrandom` directly instead of `rand`, however
# the latter is much faster (see. https://github.com/uuid-rs/uuid/pull/545,
# tl;dr: `rand` uses `getrandom` as seed then applies a fast chacha algo on it)
# Hence `fast-rng` feature which enables the use of `rand`.
uuid = { version = "1.2.2", features = ["serde", "v4", "fast-rng"] }
data-encoding = "2.3.3"
url = "2.3.1"
percent-encoding = "2.2.0"
regex = "1.8.1"
unicode-normalization = "0.1.22"
paste = "1.0.12"
flate2 = "1.0.26"
rand = "0.8.4"
thiserror = "1.0.40"
email-address-parser = "2.0.0-rc3"
fnmatch-regex = "0.2.0"
sha2 = "0.10.6"
hex-literal = { version = "0.4.1", optional = true }
rstest = { version = "0.17.0", optional = true }

[dev-dependencies]
libparsec_types = { path = ".", features = ["test-fixtures"] }

pretty_assertions = "1.3.0"
serde_test = "1.0.159"
hex-literal = "0.4.1"
rstest_reuse = "0.4.0"
rstest = "0.17.0"

[build-dependencies]
glob = "0.3.0"
