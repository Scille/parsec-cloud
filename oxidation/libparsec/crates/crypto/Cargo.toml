[package]
name = "libparsec_crypto"
version = "0.0.0"
edition = "2021"
license = " BUSL-1.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["use-rustcrypto"]
use-sodiumoxide = [
    "sodiumoxide",
    "libsodium-sys",
    "openssl",
    "zeroize",
]
use-rustcrypto = [
    "argon2",
    "blake2",
    "crypto_box",
    "digest",
    "ed25519-dalek",
    "generic-array",
    "getrandom_01",
    "getrandom_02",
    "lazy_static",
    "rand_07",
    "rand_08",
    "rsa",
    "sha1",
    "sha2",
    "x25519-dalek",
    "xsalsa20poly1305",
]
# The asm feature will enable asm feature for sha2 if something else enables the sha2 dependency.
# This feature is needed due to platform which doesn't support asm
asm = ["sha2?/asm"]

[dependencies]
serde = { version = "1.0.147", features = ["derive"] }
serde_bytes = { version = "0.11.7" }
hex = "0.4"
thiserror = "1.0.37"
base32 = "0.4.0"

sodiumoxide = { version = "0.2.7", optional = true }
libsodium-sys = { version = "0.2.7", optional = true }
openssl = { version = "0.10", optional = true, features = ["vendored"] }
zeroize = { version = "1", optional = true, features = ["alloc"]}

argon2 = { version = "0.4.1", optional = true }
blake2 = { version = "0.10.5", optional = true }
crypto_box = { version = "0.8.2", optional = true, features = ["std"] }
digest = { version = "0.10.5", optional = true }
ed25519-dalek = { version = "1.0.1", optional = true }
generic-array = { version = "0.14.6", optional = true, features = ["serde"] }
lazy_static = { version = "1.4.0", optional = true }
rsa = { version = "0.7.2", optional = true }
sha1 = { version = "0.10.5", optional = true }
sha2 = { version = "0.10.6", optional = true }
# This is exceptionally allowed since no significant changes
# were made from the last stable version to this major pre-release version.
# TODO: bump to a stable version.
x25519-dalek = { version = "2.0.0-pre.1", optional = true }
xsalsa20poly1305 = { version = "0.9.0", optional = true }

# Cryptographic randomness is required for generating SecretKey, SigningKey and PrivateKey
# For SecretKey, we have `crypto_box` -> [...] -> `rand_core~=0.6` -> `getrandom~=0.2`
# For SingingKey&PrivateKey we have `<dalek stuff>` -> `rand~=0.5` -> `getrandom~=0.1`
# So we end up with two version of `getrandom` which have each they own way of
# configuring wasm-unknown-unknown web support (see [features] part).
getrandom_01 = { package = "getrandom", version = "0.1.16", optional = true }
getrandom_02 = { package = "getrandom", version = "0.2.3", optional = true }
# On top of that we need to have access to the two version of rand (0.7 and 0.8)
# to provide the randomness configuration to the crypto functions.
# rand 0.7 relies on rand_core~=0.5/getrandom~=0.1
rand_07 = { package = "rand", version = "0.7", optional = true }
# rand 0.8 relies on rand_core~=0.6/getrandom~=0.2
rand_08 = { package = "rand", version = "0.8", optional = true }

[dev-dependencies]
pretty_assertions = "1.3.0"
serde_test = "1.0.145"
hex-literal = "0.3.3"
rmp-serde = "1.1.1"
rstest = "0.16.0"

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom_01 = { package = "getrandom", version = "0.1.16", features = ["wasm-bindgen"], optional = true }
getrandom_02 = { package = "getrandom", version = "0.2.3", features = ["js"], optional = true }
