[coverage:run]
parallel=True
source=parsec
omit =
    parsec/core/gui/ui


[coverage:report]
exclude_lines =
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:


[tool:pytest]
# Filter warnings
filterwarnings =
    # Ignore trio deprecation warnings outside of parsec
    ignore::trio.TrioDeprecationWarning:
    default::trio.TrioDeprecationWarning:tests\.(.*)|parsec\.(.*)
    # Ignore general deprecation warnings outside of parsec
    ignore::DeprecationWarning
    default::DeprecationWarning:tests\.(.*)|parsec\.(.*)
    # Ignore our todo warnings
    ignore:TODO:UserWarning:parsec|tests
markers =
    linux: marks tests as linux only
    win32: marks tests as Windows only
    real_tcp: marks tests as running with real TCP sockets instead of in-memory emulation
    gui: marks tests as GUI (enable with '--rungui')
    slow: marks tests as slow (enable with '--runslow')
    mountpoint: marks tests as mountpoint (enable with '--runmountpoint')
    diskfull: marks tests as diskfull (enable with '--rundiskfull')
    postgresql: marks tests as postgresql only (enable with '--postgresql')
    rust: marks tests as rust (enable with '--runrust')
