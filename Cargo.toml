[workspace]
members = [
    "server",
    "libparsec",
    "libparsec/crates/account",
    "libparsec/crates/client",
    "libparsec/crates/client_connection",
    "libparsec/crates/crypto",
    "libparsec/crates/platform_async",
    "libparsec/crates/platform_device_loader",
    "libparsec/crates/platform_ipc",
    "libparsec/crates/platform_mountpoint",
    "libparsec/crates/platform_realm_export",
    "libparsec/crates/platform_storage",
    "libparsec/crates/protocol",
    "libparsec/crates/serialization_format",
    "libparsec/crates/testbed",
    "libparsec/crates/tests_fixtures",
    "libparsec/crates/tests_lite",
    "libparsec/crates/tests_macros",
    "libparsec/crates/types",
    "libparsec/crates/zstd",
    "bindings/web",
    "bindings/electron",
    "bindings/android/libparsec/rust",
    "cli",
]
# Ignore bindings stuff given they are special snowflakes that require exotic toolchain and dependencies
# The idea is to be able to do `cargo test` from the root and have all the libparsec&co tests run
default-members = [
    "libparsec",
    "libparsec/crates/account",
    "libparsec/crates/client",
    "libparsec/crates/client_connection",
    "libparsec/crates/crypto",
    "libparsec/crates/platform_async",
    "libparsec/crates/platform_device_loader",
    "libparsec/crates/platform_ipc",
    "libparsec/crates/platform_mountpoint",
    "libparsec/crates/platform_realm_export",
    "libparsec/crates/platform_storage",
    "libparsec/crates/protocol",
    "libparsec/crates/serialization_format",
    "libparsec/crates/testbed",
    "libparsec/crates/tests_fixtures",
    "libparsec/crates/tests_lite",
    "libparsec/crates/tests_macros",
    "libparsec/crates/types",
    "libparsec/crates/zstd",
    "cli",
]
resolver = "2"

# Define values to be inherited by workspace members.
#
# For a member to inherit a value, it need to set `{key}.workspace = true`.
#
# https://doc.rust-lang.org/cargo/reference/workspaces.html#the-package-table
[workspace.package]
authors = ["@Scille/parsec-dev", "@Scille/rust-code-owners"]
edition = "2021"
homepage = "https://parsec.cloud"
license = "BUSL-1.1"
publish = false
repository = "https://github.com/Scille/parsec-cloud"
# We use the same version for all crates.
# This comment is used to prevent `taplo` from adding multiple spaces between the version and the comment.
version = "3.5.0-a.6+dev" # __PARSEC_VERSION__

[workspace.lints.clippy]
undocumented_unsafe_blocks = "deny"
unwrap_used = "deny"

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(use_pure_rust_but_dirty_zstd)',
    'cfg(skip_fuse_atime_option)',
] }

# All dependencies should be specified here instead of just in the crate(s) requiring them:
# - It ensures each given dependency version is consistent across all crates
# - It simplifies updating dependency version (only a single place to update)
#
# Note the dependencies are marked `default-features = false`, this is because otherwise
# the default features are always provided (see https://github.com/rust-lang/cargo/issues/8366).
# This means the dependencies must always specify all features they use instead of relying
# on default features... Let's say it's a way to reduce bloat by making the developer
# check the default feature and making sure they are actually needed ;-)
[workspace.dependencies]
libparsec = { path = "libparsec", default-features = false }
libparsec_account = { path = "libparsec/crates/account", default-features = false }
libparsec_client = { path = "libparsec/crates/client", default-features = false }
libparsec_client_connection = { path = "libparsec/crates/client_connection", default-features = false }
libparsec_crypto = { path = "libparsec/crates/crypto", default-features = false }
libparsec_platform_async = { path = "libparsec/crates/platform_async", default-features = false }
libparsec_platform_device_loader = { path = "libparsec/crates/platform_device_loader", default-features = false }
libparsec_platform_http_proxy = { path = "libparsec/crates/platform_http_proxy", default-features = false }
libparsec_platform_ipc = { path = "libparsec/crates/platform_ipc", default-features = false }
libparsec_platform_mountpoint = { path = "libparsec/crates/platform_mountpoint", default-features = false }
libparsec_platform_realm_export = { path = "libparsec/crates/platform_realm_export", default-features = false }
libparsec_platform_storage = { path = "libparsec/crates/platform_storage", default-features = false }
libparsec_protocol = { path = "libparsec/crates/protocol", default-features = false }
libparsec_serialization_format = { path = "libparsec/crates/serialization_format", default-features = false }
libparsec_testbed = { path = "libparsec/crates/testbed", default-features = false }
libparsec_tests_fixtures = { path = "libparsec/crates/tests_fixtures", default-features = false }
libparsec_tests_lite = { path = "libparsec/crates/tests_lite", default-features = false }
libparsec_tests_macros = { path = "libparsec/crates/tests_macros", default-features = false }
libparsec_types = { path = "libparsec/crates/types", default-features = false }
libparsec_zstd = { path = "libparsec/crates/zstd", default-features = false }

# Third parties
android_logger = { version = "0.15", default-features = false }
anyhow = { version = "1.0.98", default-features = false }
argon2 = { version = "0.5.3", default-features = false }
assert_cmd = { version = "2.0.17", default-features = false }
async-broadcast = { version = "0.5.1", default-features = false }
async-lock = { version = "3.4.1", default-features = false }
blake2 = { version = "0.10.6", default-features = false }
bytes = { version = "1.10.1", default-features = false }
chrono = { version = "0.4.41", default-features = false }
clap = { version = "4.5.43", default-features = false }
console_error_panic_hook = { version = "=0.1.6", default-features = false }
console_log = { version = "1.0.0", default-features = false }
crc32fast = { version = "1.5.0", default-features = false }
crypto_box = { version = "0.9.1", default-features = false }
crypto_secretbox = { version = "0.1.1", default-features = false }
ctrlc = { version = "3.4.7", default-features = false }
# You need base64&co ? This is the crate you need !
data-encoding = { version = "2.9.0", default-features = false }
dialoguer = { version = "0.11.0", default-features = false }
digest = { version = "0.10.7", default-features = false }
dirs = { version = "5.0.1", default-features = false }
ed25519-dalek = { version = "2.2.0", default-features = false }
email-address-parser = { version = "2.0.0", default-features = false }
env_logger = { version = "0.11.8", default-features = false }
error_set = { version = "0.8.5", default-features = false }
event-listener = { version = "5.4.1", default-features = false }
eventsource-stream = { version = "0.2.3", default-features = false }
flume = { version = "0.11.1", default-features = false }
fnmatch-regex = { version = "0.2.1", default-features = false }
fuser = { version = "0.15.1", default-features = false }
futures = { version = "0.3.31", default-features = false }
generic-array = { version = "0.14.7", default-features = false }
getrandom = { package = "getrandom", version = "0.2.15", default-features = false }
gloo-timers = { version = "0.3.0", default-features = false }
hex = { version = "0.4.3", default-features = false }
hex-literal = { version = "0.4.1", default-features = false }
indexed-db = { version = "0.5.0-alpha.1", default-features = false }
itertools = { version = "0.12.1", default-features = false }
jni = { version = "0.21.1", default-features = false }
js-sys = { version = "0.3.70", default-features = false }
keyring = { version = "3.6.3", default-features = false }
lazy_static = { version = "1.5.0", default-features = false }
libc = { version = "0.2.174", default-features = false }
libsodium-sys = { version = "0.2.7", default-features = false }
libsqlite3-sys = { version = "0.30.1", default-features = false }
log = { version = "0.4.27", default-features = false }
miniserde = { version = "0.1.42", default-features = false }
neon = { version = "1.0.0", default-features = false }
once_cell = { version = "1.21.3", default-features = false }
openssl = { version = "0.10.73", default-features = false }
paste = { version = "1.0.15", default-features = false }
percent-encoding = { version = "2.3.1", default-features = false }
pin-project = { version = "1.1.10", default-features = false }
# Utility crate to find system artifacts
pkg-config = { version = "0.3.32", default-features = false }
predicates = { version = "3.1.3", default-features = false }
pretty_assertions = { version = "1.4.1", default-features = false }
proc-macro2 = { version = "1.0.96", default-features = false }
proptest = { version = "1.7.0", default-features = false }
proptest-state-machine = { version = "0.3.1", default-features = false }
pyo3 = { version = "0.25.1", default-features = false }
quote = { version = "1.0.40", default-features = false }
rand = { version = "0.8.5", default-features = false }
regex = { version = "1.11.1", default-features = false }
regex-syntax = { version = "0.8.4", default-features = false }
reqwest = { version = "0.12.22", default-features = false }
rexpect = "0.6.2"
rmp-serde = { version = "1.3.0", default-features = false }
rpassword = { version = "7.4.0", default-features = false }
rsa = { version = "0.8.2", default-features = false }
rstest = { version = "0.24.0", default-features = false }
rstest_reuse = { version = "0.7.0", default-features = false }
ruzstd = { version = "0.7.3", default-features = true }
sentry = { version = "0.34.0", default-features = false }
sentry-log = { version = "0.34.0", default-features = false }
serde = { version = "1.0.219", default-features = false }
serde-wasm-bindgen = { version = "0.6.4", default-features = false }
serde_bytes = { version = "0.11.17", default-features = false }
serde_json = { version = "1.0.142", default-features = false }
serde_test = { version = "1.0.177", default-features = false }
serde_with = { version = "3.14.0", default-features = false }
sha1 = { version = "0.10.6", default-features = false }
sha2 = { version = "0.10.9", default-features = false }
blahaj = "0.6.0"
smallvec = { version = "1.15.1", default-features = false }
sodiumoxide = { version = "0.2.7", default-features = false }
spinners = { version = "4.1.1", default-features = false }
sqlx = { version = "0.8.6", default-features = false }
syn = { version = "2.0.104", default-features = false }
thiserror = { version = "2.0.12", default-features = false }
tokio = { version = "1.47.1", default-features = false }
unicode-normalization = { version = "0.1.24", default-features = false }
url = { version = "2.5.4", default-features = false }
uuid = { version = "1.17.0", default-features = false }
wasm-bindgen = { version = "0.2.97", default-features = false }
wasm-bindgen-futures = { version = "0.4.47", default-features = false }
wasm-bindgen-test = { version = "0.3.47", default-features = false, features = ["std"] }
web-sys = { version = "0.3.77", default-features = false }
web-time = { version = "1.1.0", default-features = false }
widestring = { version = "1.2.0", default-features = false }
windows-sys = { version = "0.60.2", default-features = false }
winfsp_wrs = { version = "0.4.0", default-features = false }
winfsp_wrs_build = { version = "0.4.0", default-features = false }
x25519-dalek = { version = "2.0.1", default-features = false }
zeroize = { version = "1.8.1", default-features = false }
zstd = { version = "0.13.3", default-features = false }

[patch.crates-io]
# Patch web-sys for `Blob.bytes`
# FIXME: Remove me once https://github.com/rustwasm/wasm-bindgen/pull/4506 is merged and released
web-sys = { git = "https://github.com/FirelightFlagboy/wasm-bindgen.git", rev = "9402ae3bd1eea6d4a8c0d6b62dd62efa4c536d6e" }
wasm-bindgen = { git = "https://github.com/FirelightFlagboy/wasm-bindgen.git", rev = "9402ae3bd1eea6d4a8c0d6b62dd62efa4c536d6e" }
js-sys = { git = "https://github.com/FirelightFlagboy/wasm-bindgen.git", rev = "9402ae3bd1eea6d4a8c0d6b62dd62efa4c536d6e" }
# End patch web-sys for `Blob.bytes`

[workspace.dependencies.criterion]
default-features = false
version = "0.5.1"
# We specify a set of features here instead of defining them in every other crates,
# since we will use the same set of features.
features = [
    "cargo_bench_support", # Allow to use cargo bench
    "plotters",            # Provide a dashboard to visualize the benchmark results
    "rayon",               # Allow to run benchmarks in parallel
    "html_reports",        # Generate HTML reports
    "csv_output",          # Generate CSV reports
]

# Rust unoptimized code is really slow with crypto algorithm and regex compilation,
# hence we optimize our 3rd party dependencies.
[profile.dev.package."*"]
opt-level = 1

[profile.dev-python]
inherits = "dev"
# We don't optimize our own crates here given it comes with a high impact on
# when doing single change recompilation.

# Custom profiles for the CI. The idea here is to try to save compilation time
# and artifacts size (to keep cache efficient).

[profile.ci-rust]
inherits = "dev"
# Remove debug symbols saves roughly ~30% compilation time and ~50% artifacts size
debug = false
# Given we don't keep our crate in the cache, we always build them from the
# ground. Removing that saves ~20% in artifacts size.
incremental = false

[profile.ci-python]
inherits = "ci-rust"
# Using `opt-level = 0` divides by 2 compilation time, however it makes code run much
# slower which is a no-go for Python tests :'(
opt-level = 1
