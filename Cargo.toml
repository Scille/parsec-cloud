[workspace]
members = [
    "server",
    "libparsec",
    "libparsec/crates/client",
    "libparsec/crates/client_connection",
    "libparsec/crates/client_high_level_api",
    "libparsec/crates/crypto",
    "libparsec/crates/platform_async",
    "libparsec/crates/platform_device_loader",
    "libparsec/crates/platform_storage",
    "libparsec/crates/protocol",
    "libparsec/crates/serialization_format",
    "libparsec/crates/testbed",
    "libparsec/crates/tests_fixtures",
    "libparsec/crates/tests_macros",
    "libparsec/crates/types",
    "bindings/web",
    "bindings/electron",
    "bindings/android/libparsec/rust",
]
# Ignore bindings stuff given they are special snowflakes that require exotic toolchain and dependencies
# The idea is to be able to do `cargo test` from the root and have all the libparsec&co tests run
default-members = [
    "libparsec",
    "libparsec/crates/client",
    "libparsec/crates/client_connection",
    "libparsec/crates/client_high_level_api",
    "libparsec/crates/crypto",
    "libparsec/crates/platform_async",
    "libparsec/crates/platform_device_loader",
    "libparsec/crates/platform_storage",
    "libparsec/crates/protocol",
    "libparsec/crates/serialization_format",
    "libparsec/crates/testbed",
    "libparsec/crates/tests_fixtures",
    "libparsec/crates/tests_macros",
    "libparsec/crates/types",
]

# All dependencies should be specified here instead of just in the crate(s) requiring them:
# - It ensures each given dependency version is consistent accross all crates
# - It simplifies updating dependency version (only a single place to update)
#
# Note the dependencies are marked `default-features = false`, this is because otherwise
# the default features are always provided (see https://github.com/rust-lang/cargo/issues/8366).
# This means the dependencies must always specify all features they use instead of relying
# on default features... Let's say it's a way to reduce bloat by making the developer
# check the default feature and making sure they are actually needed ;-)
[workspace.dependencies]
libparsec = { path = "libparsec", default-features = false }
libparsec_client_high_level_api = { path = "libparsec/crates/client_high_level_api", default-features = false }
libparsec_protocol = { path = "libparsec/crates/protocol", default-features = false }
libparsec_crypto = { path = "libparsec/crates/crypto", default-features = false }
libparsec_types = { path = "libparsec/crates/types", default-features = false }
libparsec_platform_device_loader = { path = "libparsec/crates/platform_device_loader", default-features = false }
libparsec_platform_storage = { path = "libparsec/crates/platform_storage", default-features = false }
libparsec_serialization_format = { path = "libparsec/crates/serialization_format", default-features = false }
libparsec_testbed = { path = "libparsec/crates/testbed", default-features = false }
libparsec_tests_fixtures = { path = "libparsec/crates/tests_fixtures", default-features = false }
libparsec_client_connection = { path = "libparsec/crates/client_connection", default-features = false }
libparsec_platform_async = { path = "libparsec/crates/platform_async", default-features = false }
libparsec_platform_http_proxy = { path = "libparsec/crates/platform_http_proxy", default-features = false }
libparsec_client = { path = "libparsec/crates/client", default-features = false }
libparsec_tests_macros = { path = "libparsec/crates/tests_macros", default-features = false }

# Third parties
android_logger = { version = "0.13", default-features = false }
anyhow = { version = "1.0.72", default-features = false }
argon2 = { version = "0.5.1", default-features = false }
base32 = { version = "0.4.0", default-features = false }
base64 = { version = "0.21.2", default-features = false }
blake2 = { version = "0.10.6", default-features = false }
bytes = { version = "1.4.0", default-features = false }
chrono = { version = "0.4.26", default-features = false }
console_error_panic_hook = { version = "0.1.6", default-features = false }
console_log = { version = "1.0.0", default-features = false }
crc32fast = { version = "1.3.2", default-features = false }
crypto_box = { version = "0.8.2", default-features = false }
crypto_secretbox = { version = "0.1.1", default-features = false }
data-encoding = { version = "2.4.0", default-features = false }
diesel = { version = "2.1.0", default-features = false }
digest = { version = "0.10.7", default-features = false }
ed25519-dalek = { version = "1.0.1", default-features = false }
email-address-parser = { version = "2.0.0", default-features = false }
env_logger = { version = "0.10.0", default-features = false }
flate2 = { version = "1.0.26", default-features = false }
flume = { version = "0.10.14", default-features = false }
fnmatch-regex = { version = "0.2.0", default-features = false }
futures-lite = { version = "1.13.0", default-features = false }
futures = { version = "0.3.28", default-features = false }
generic-array = { version = "0.14.7", default-features = false }
# Two versions of `getrandom` needed in `libparsec_crypto`
getrandom_01 = { package = "getrandom", version = "0.1.16", default-features = false }
getrandom_02 = { package = "getrandom", version = "0.2.10", default-features = false }
glob = { version = "0.3.1", default-features = false }
hex-literal = { version = "0.4.1", default-features = false }
hex = { version = "0.4", default-features = false }
instant = { version = "0.1.12", default-features = false }
itertools = { version = "0.11.0", default-features = false }
jni = { version = "0.21.1", default-features = false }
js-sys = { version = "0.3.64", default-features = false }
lazy_static = { version = "1.4.0", default-features = false }
libsodium-sys = { version = "0.2.7", default-features = false }
libsqlite3-sys = { version = "0.26.0", default-features = false }
log = { version = "0.4.19", default-features = false }
miniserde = { version = "0.1.32", default-features = false }
neon = { version = "0.10", default-features = false }
once_cell = { version = "1.18.0", default-features = false }
openssl = { version = "0.10.55", default-features = false }
paste = { version = "1.0.14", default-features = false }
percent-encoding = { version = "2.3.0", default-features = false }
pretty_assertions = { version = "1.4.0", default-features = false }
proc-macro2 = { version = "1.0.66", default-features = false }
pyo3 = { version = "0.19.1", default-features = false }
quote = { version = "1.0.32", default-features = false }
# Two versions of `rand` needed in `libparsec_crypto`
rand_07 = { package = "rand", version = "0.7", default-features = false }
rand_08 = { package = "rand", version = "0.8", default-features = false }
rand = { version = "0.8.5", default-features = false }
regex = { version = "1.9.1", default-features = false }
reqwest-eventsource = { version = "0.4.0", default-features = false }
reqwest = { version = "0.11.18", default-features = false }
rmp-serde = { version = "1.1.2", default-features = false }
rsa = { version = "0.8.2", default-features = false }
rstest_reuse = { version = "0.6.0", default-features = false }
rstest = { version = "0.18.1", default-features = false }
serde_bytes = { version = "0.11.12", default-features = false }
serde_json = { version = "1.0.104", default-features = false }
serde_test = { version = "1.0.176", default-features = false }
serde = { version = "1.0.179", default-features = false }
serde_with = { version = "3.1.0", default-features = false }
sha1 = { version = "0.10.5", default-features = false }
sha2 = { version = "0.10.7", default-features = false }
sodiumoxide = { version = "0.2.7", default-features = false }
syn = { version = "2.0.28", default-features = false }
thiserror = { version = "1.0.44", default-features = false }
tokio = { version = "1.29.1", default-features = false }
unicode-normalization = { version = "0.1.22", default-features = false }
url = { version = "2.4.0", default-features = false }
uuid = { version = "1.4.1", default-features = false }
wasm-bindgen-futures = { version = "0.4.37", default-features = false }
wasm-bindgen-test = { version = "0.3.37", default-features = false }
wasm-bindgen = { version = "0.2.87", default-features = false }
web-sys = { version = "0.3.64", default-features = false }
# Using a non-stable version is exceptionally allowed since no significant changes
# were made from the last stable version to this major pre-release version.
# TODO: bump to a stable version.
x25519-dalek = { version = "2.0.0-rc.3", default-features = false }
zeroize = { version = "1.6.0", default-features = false }

# Rust unoptimized code is really slow with crypto algorithm and regex compilation,
# hence we optimize our 3rd party dependencies.
[profile.dev.package."*"]
opt-level = 1

[profile.dev-python]
inherits = "dev"
# We don't optimize our own crates here given it comes with a high impact on
# when doing single change recompilation.

# Custom profiles for the CI. The idea here is to try to save compilation time
# and artifacts size (to keep cache efficient).

[profile.ci-rust]
inherits = "dev"
# Remove debug symbols saves roughly ~30% compilation time and ~50% artifacts size
debug = false
# Given we don't keep our crate in the cache, we always build them from the
# ground. Removing that saves ~20% in artifacts size.
incremental = false

[profile.ci-python]
inherits = "ci-rust"
# Using `opt-level = 0` divides by 2 compilation time, however it makes code run much
# slower which is a no-go for Python tests :'(
opt-level = 1
