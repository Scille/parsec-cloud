[package]
name = "libparsec_platform_storage"
publish.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
version.workspace = true
repository.workspace = true

[lints]
workspace = true

[features]
test-with-testbed = ["libparsec_testbed"]
# to access methods that must only be used during tests
expose-test-methods = []

[dependencies]
libparsec_types = { workspace = true }
libparsec_platform_async = { workspace = true }
libparsec_testbed = { workspace = true, optional = true }

log = { workspace = true }
paste = { workspace = true }
lazy_static = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["fs", "sync"] }
# We add this dependency to have sqlite3 bundled into our code.
libsqlite3-sys = { workspace = true, features = ["bundled"] }
sqlx = { workspace = true, features = ["sqlite", "runtime-tokio", "macros"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
indexed_db_futures = { workspace = true, features = ["indices", "cursors"] }
js-sys = { workspace = true }
web-sys = { workspace = true, features = ["IdbKeyRange"] }
serde = { workspace = true }
serde-wasm-bindgen = { workspace = true }

[dev-dependencies]
libparsec_tests_lite = { workspace = true }
# Note `libparsec_tests_fixtures` enables our `test-with-testbed` feature
libparsec_tests_fixtures = { workspace = true, default-features = false, features = [
    "test-with-platform-storage-testbed",
] }
