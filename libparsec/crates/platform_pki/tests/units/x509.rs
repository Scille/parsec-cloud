// Parsec Cloud (https://parsec.cloud) Copyright (c) BUSL-1.1 2016-present Scille SAS

use crate::x509::{Certificate, DistinguishedNameValue};
use hex_literal::hex;

#[test]
fn test_load_der() {
    // Alice's Certificate generated by `../../examples/init_softhsm2.sh` script
    let der_certificate = hex!(
        "308203d9308202c1a0030201020214475fd1da4528f281ca56ed07f0e6ccd9565b11ac"
        "300d06092a864886f70d01010b050030193117301506035504030c0e50617273656320"
        "54657374204341301e170d3235313030383037353735385a170d323631303038303735"
        "3735385a303e311a301806035504030c11616c69636520506172736563205465737431"
        "20301e06092a864886f70d0109011611616c696365406578616d706c652e636f6d3082"
        "01a5300d06092a864886f70d010101050003820192003082018d0282018400bf619185"
        "091b9ef2b353f8783ae1e1f5e50e9bac5680139258bad2c1c1bdc5aecdfd75e41a27a7"
        "02c84f1ff4ebf226029766b7bae67a004fba021a8512adadce26321c7796930da935e1"
        "ee63052facf8e2c551f348b51546208a94189d26a0424c7f59d945c871f929cc47dd3b"
        "cd212a9c3207ac553744e81b09be3a7f61dfd1e1b26bff517ca21e36f9b39e81005b34"
        "d4a85cb35f7c0fa0dcac8b31d166e7bf179220189733156daf11b9d7344ef1c1a26c49"
        "c9c415a69e62b012cb7af3c8003ce9132160c441d1102a7e76c2b148d3bf47470eaf32"
        "e8b6f998dbbb9c39645b2e827f8c0f8a36f863f2f614b17b958840ce4e73060ae45354"
        "3e5f3ae50188cd05f0e5df194febc7996204ca2bf3c650074c128ba6ca64626570d8ae"
        "3d606fbe4d4bae3ef1986a95f523e472d9a5dd2c196d634363f00ae048c8cf89be2c45"
        "2b60da25c7a9985794bf72b1bf71e64bf946f564bfda9a7577a7fe75f4cca1ce74ad5f"
        "1f9f1978d9eabfa900fedb85ee200a32b71921360c0f64ce1b985c0ded7cdcf7c70203"
        "010001a371306f30200603551d1104193017811573616e2b616c696365406578616d70"
        "6c652e636f6d300b0603551d0f040403020780301d0603551d0e04160414fe4ae50e06"
        "ed9333cd3a1c62c6df762fab5e735b301f0603551d23041830168014f2c7e96b2d7d0b"
        "29d4e8578596ce8aca2e0e1cd6300d06092a864886f70d01010b05000382010100699e"
        "185438475164dd751ebb164763714fafe893dc110144a4fe563f78c7d89a54e3acd374"
        "eaaef4f6ba21569ef572e085a3821193addfe98af66b4ec53f4ba84b0f3e3a46802f2e"
        "2a09f17d4c37e63b947accc9f34e71ad567d9b2948f2107b7c2c14458751e08ae15ae4"
        "0a3146238c97e05287eb514ad2847d5d6e2fc9617ee180e252cc4eab09f015d21d08e2"
        "90bafe18c83b8c9970ad310c98b63854d1a97f5c0d4f104ee9184243cc3ac0d7e854af"
        "405336486dee28f1ab2fc3a25d1200e323f393ebb2f650e8080a20816f5b4a2e004c0e"
        "e702bcec1f85ee0aab7b9eba73cf66334a1b01612dd5886b17fe66f879ab9de2b0a40a"
        "4763cba975b05262a3"
    );

    let cert = Certificate::load_der(&der_certificate).expect("Failed to load der certificate");
    assert_eq!(
        cert.subject,
        [
            DistinguishedNameValue::CommonName("alice Parsec Test".into()),
            DistinguishedNameValue::EmailAddress("alice@example.com".into())
        ]
    );
    assert_eq!(
        cert.issuer,
        [DistinguishedNameValue::CommonName("Parsec Test CA".into())]
    )
}
