[package]
name = "libparsec_types"
publish.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
version.workspace = true
repository.workspace = true

[lints]
workspace = true

[features]
test-mock-time = []
test-fixtures = ["dep:hex-literal", "dep:rstest"]

[dependencies]
libparsec_crypto = { workspace = true }
libparsec_serialization_format = { workspace = true }
libparsec_platform_async = { workspace = true }

serde = { workspace = true, features = ["derive"] }
bytes = { workspace = true, features = ["serde"] }
lazy_static = { workspace = true }
serde_with = { workspace = true, features = ["std", "macros"] }
rmp-serde = { workspace = true }
serde_bytes = { workspace = true, features = ["std"] }
chrono = { workspace = true, features = ["clock"] }
# By default uuid crate uses `getrandom` directly instead of `rand`, however
# the latter is much faster (see. https://github.com/uuid-rs/uuid/pull/545,
# tl;dr: `rand` uses `getrandom` as seed then applies a fast chacha algo on it)
# Hence `fast-rng` feature which enables the use of `rand`.
uuid = { workspace = true, features = ["serde", "v4", "fast-rng"] }
data-encoding = { workspace = true, features = ["std"] }
hex = { workspace = true }
url = { workspace = true }
percent-encoding = { workspace = true, features = ["alloc"] }
regex = { workspace = true, features = ["std", "perf", "unicode"] }
regex-syntax = { workspace = true, features = ["unicode-perl"] }
unicode-normalization = { workspace = true, features = ["std"] }
paste = { workspace = true }
rand = { workspace = true, features = ["std", "std_rng"] }
thiserror = { workspace = true }
email-address-parser = { workspace = true }
anyhow = { workspace = true, features = ["std", "backtrace"] }
fnmatch-regex = { workspace = true }
hex-literal = { workspace = true, optional = true }
rstest = { workspace = true, optional = true }
zstd = { workspace = true }
# TODO: temporary to fix parquet wasm build
# upstream issue: https://github.com/gyscos/zstd-rs/issues/269
zstd-sys = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
chrono = { workspace = true, features = ["wasmbind"] }

[dev-dependencies]
libparsec_types = { workspace = true, features = ["test-fixtures"] }
libparsec_tests_lite = { workspace = true }

serde_test = { workspace = true }
rstest_reuse = { workspace = true }

[build-dependencies]
glob = { workspace = true }
