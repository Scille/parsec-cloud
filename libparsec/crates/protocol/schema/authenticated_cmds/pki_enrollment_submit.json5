[
    {
        "major_versions": [
            5
        ],
        "cmd": "pki_enrollment_submit",
        "req": {
            "fields": [
                {
                    // UUID of the current request, generated by the sender.
                    "name": "enrollment_id",
                    "type": "EnrollmentID"
                },
                {
                    // Allow to submit a new request to replace a pending one.
                    // A request is identified by its `submitter_der_x509_certificate`.
                    "name": "force",
                    "type": "Boolean"
                },
                {
                    // The certificate used by the sender to sign the payload
                    "name": "der_x509_certificate",
                    "type": "Bytes"
                },
                {
                    // The signature of the payload
                    "name": "payload_signature",
                    "type": "Bytes"
                },
                {
                    // PkiEnrollmentSubmitPayload serialized in msgpack format
                    "name": "payload",
                    "type": "Bytes"
                }
            ]
        },
        "reps": [
            {
                // The request was accepted by the server and need to be reviewed by an organization admin.
                "status": "ok",
                "fields": [
                    {
                        "name": "submitted_on",
                        "type": "DateTime"
                    }
                ]
            },
            {
                // An enrollment request already exist for the provided certificate.
                "status": "already_submitted",
                "fields": [
                    {
                        "name": "submitted_on",
                        "type": "DateTime"
                    }
                ]
            },
            {
                "status": "id_already_used"
            },
            {
                // The server check if an user doesn't already exist using the email contained in the certificate.
                "status": "email_already_used"
            },
            {
                // The certificate was already used with an accepted request.
                "status": "already_enrolled"
            },
            {
                // The server tries to deserialize the payload to check if it use the correct format.
                "status": "invalid_payload"
            }
        ]
    }
]
