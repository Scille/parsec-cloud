[
    {
        "major_versions": [
            4
        ],
        "req": {
            "cmd": "user_revoke",
            "fields": [
                {
                    "name": "revoked_user_certificate",
                    "type": "Bytes"
                }
            ]
        },
        "reps": [
            {
                "status": "ok"
            },
            {
                "status": "not_allowed",
                "fields": [
                    {
                        "name": "reason",
                        "type": "NonRequiredOption<String>"
                    }
                ]
            },
            {
                "status": "invalid_certification",
                "fields": [
                    {
                        "name": "reason",
                        "type": "NonRequiredOption<String>"
                    }
                ]
            },
            {
                "status": "not_found"
            },
            {
                "status": "already_revoked",
                "fields": [
                    {
                        "name": "reason",
                        "type": "NonRequiredOption<String>"
                    }
                ]
            },
            {
                // Returned if the timestamp in the certificate is too far away compared
                // to server clock.
                "status": "bad_timestamp",
                "fields": [
                    {
                        "name": "reason",
                        "type": "NonRequiredOption<String>"
                    },
                    {
                        "name": "ballpark_client_early_offset",
                        "type": "Float"
                    },
                    {
                        "name": "ballpark_client_late_offset",
                        "type": "Float"
                    },
                    {
                        "name": "backend_timestamp",
                        "type": "DateTime"
                    },
                    {
                        "name": "client_timestamp",
                        "type": "DateTime"
                    }
                ]
            },
            {
                // Returned if another certificate in the server has a creation date
                // posterior or equal to our current one.
                "status": "require_greater_timestamp",
                "fields": [
                    {
                        "name": "strictly_greater_than",
                        "type": "DateTime"
                    }
                ]
            }
        ]
    }
]
