[package]
name = "libparsec_platform_async"
version = "0.0.0"
edition = "2021"

[dependencies]
flume = { workspace = true, features = ["async", "select", "eventual-fairness"] }
# futures is used for its macros `select_all` and `join_all`
futures = { workspace = true, features = ["std", "async-await"] }

[dev-dependencies]
log = { workspace = true }
# `std::time::Instant` is not available for wasm32, crate `instant` provides a
# fallback based on `window.performance.now()`
instant = { workspace = true }
# Used for `futures_lite::future::or` and don't require `Unpin`
futures-lite = { workspace = true, features = ["std"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { workspace = true, features = ["spans", "std"] }
wasm-bindgen-futures = { workspace = true }
# Window feature is require for `Timer`.
web-sys = { workspace = true, features = ["Window"] }
js-sys = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = { workspace = true }
# Used for binding `log` with `console.log*`
console_log = { workspace = true }
instant = { workspace = true, features = ["wasm-bindgen"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["rt", "time", "sync", "macros"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
libparsec_tests_fixtures = { workspace = true }

tokio = { workspace = true, features = ["full"] }
