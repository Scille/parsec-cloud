from parsec._parsec import EntryID, SecretKey, RealmRole

from pendulum import DateTime

class EntryName:
    def __init__(self, name: str) -> None: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    def __eq__(self, other: EntryName | None) -> bool: ...
    def __ne__(self, other: EntryName | None) -> bool: ...
    def __lt__(self, other: EntryName | None) -> bool: ...
    def __gt__(self, other: EntryName | None) -> bool: ...
    def __le__(self, other: EntryName | None) -> bool: ...
    def __ge__(self, other: EntryName | None) -> bool: ...
    def __hash__(self) -> int: ...
    @property
    def str(self) -> str: ...

class WorkspaceEntry:
    def __init__(
        self,
        name: EntryName,
        id: EntryID,
        key: SecretKey,
        encryption_revision: int,
        encrypted_on: DateTime,
        role_cached_on: DateTime,
        role: RealmRole | None,
    ) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: WorkspaceEntry | None) -> bool: ...
    def __ne__(self, other: WorkspaceEntry | None) -> bool: ...
    @property
    def id(self) -> EntryID: ...
    @property
    def name(self) -> EntryName: ...
    @property
    def key(self) -> SecretKey: ...
    @property
    def encryption_revision(self) -> int: ...
    @property
    def encrypted_on(self) -> DateTime: ...
    @property
    def role_cached_on(self) -> DateTime: ...
    @property
    def role(self) -> RealmRole | None: ...
    def new(name: EntryName, timestamp: DateTime) -> WorkspaceEntry: ...
    def evolve(self, **kwargs): ...
    def is_revoked(self) -> bool: ...
