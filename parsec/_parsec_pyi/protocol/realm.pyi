# Parsec Cloud (https://parsec.cloud) Copyright (c) AGPL-3.0 2016-present Scille SAS

from __future__ import annotations

from typing import Iterable

from parsec._parsec import DateTime, DeviceID, RealmID, UserID

# Realm
class RealmCreateReq:
    def __init__(self, role_certificate: bytes) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def role_certificate(self) -> bytes: ...

class RealmCreateRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmCreateRep: ...

class RealmCreateRepOk(RealmCreateRep): ...

class RealmCreateRepInvalidCertification(RealmCreateRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmCreateRepInvalidData(RealmCreateRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmCreateRepNotFound(RealmCreateRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmCreateRepAlreadyExists(RealmCreateRep): ...

class RealmCreateRepBadTimestamp(RealmCreateRep):
    def __init__(
        self,
        reason: str | None,
        ballpark_client_early_offset: float | None,
        ballpark_client_late_offset: float | None,
        backend_timestamp: DateTime | None,
        client_timestamp: DateTime | None,
    ) -> None: ...
    @property
    def reason(self) -> str | None: ...
    @property
    def ballpark_client_early_offset(self) -> float | None: ...
    @property
    def ballpark_client_late_offset(self) -> float | None: ...
    @property
    def backend_timestamp(self) -> DateTime | None: ...
    @property
    def client_timestamp(self) -> DateTime | None: ...

class RealmCreateRepUnknownStatus(RealmCreateRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class RealmStatusReq:
    def __init__(self, realm_id: RealmID) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def realm_id(self) -> RealmID: ...

class RealmStatusRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmStatusRep: ...

class RealmStatusRepOk(RealmStatusRep):
    def __init__(
        self,
        in_maintenance: bool,
        maintenance_type: MaintenanceType | None,
        maintenance_started_on: DateTime | None,
        maintenance_started_by: DeviceID | None,
        encryption_revision: int,
    ) -> None: ...
    @property
    def in_maintenance(self) -> bool: ...
    @property
    def maintenance_type(self) -> MaintenanceType | None: ...
    @property
    def maintenance_started_on(self) -> DateTime | None: ...
    @property
    def maintenance_started_by(self) -> DeviceID | None: ...
    @property
    def encryption_revision(self) -> int: ...

class RealmStatusRepNotAllowed(RealmStatusRep): ...

class RealmStatusRepNotFound(RealmStatusRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmStatusRepRealmDeleted(RealmStatusRep):
    def __init__(self) -> None: ...

class RealmStatusRepUnknownStatus(RealmStatusRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class RealmStatsReq:
    def __init__(self, realm_id: RealmID) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def realm_id(self) -> RealmID: ...

class RealmStatsRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmStatsRep: ...

class RealmStatsRepOk(RealmStatsRep):
    def __init__(self, blocks_size: int, vlobs_size: int) -> None: ...
    @property
    def blocks_size(self) -> int: ...
    @property
    def vlobs_size(self) -> int: ...

class RealmStatsRepNotAllowed(RealmStatsRep): ...

class RealmStatsRepNotFound(RealmStatsRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmStatsRepRealmDeleted(RealmStatsRep):
    def __init__(self) -> None: ...

class RealmStatsRepUnknownStatus(RealmStatsRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class RealmGetRoleCertificatesReq:
    def __init__(self, realm_id: RealmID) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def realm_id(self) -> RealmID: ...

class RealmGetRoleCertificatesRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmGetRoleCertificatesRep: ...

class RealmGetRoleCertificatesRepOk(RealmGetRoleCertificatesRep):
    def __init__(self, certificates: Iterable[bytes]) -> None: ...
    @property
    def certificates(self) -> tuple[bytes, ...]: ...

class RealmGetRoleCertificatesRepNotAllowed(RealmGetRoleCertificatesRep): ...

class RealmGetRoleCertificatesRepNotFound(RealmGetRoleCertificatesRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmGetRoleCertificatesRepUnknownStatus(RealmGetRoleCertificatesRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class RealmUpdateRolesReq:
    def __init__(self, role_certificate: bytes, recipient_message: bytes | None) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def role_certificate(self) -> bytes: ...
    @property
    def recipient_message(self) -> bytes | None: ...

class RealmUpdateRolesRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmUpdateRolesRep: ...

class RealmUpdateRolesRepOk(RealmUpdateRolesRep): ...

class RealmUpdateRolesRepNotAllowed(RealmUpdateRolesRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmUpdateRolesRepInvalidCertification(RealmUpdateRolesRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmUpdateRolesRepInvalidData(RealmUpdateRolesRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmUpdateRolesRepAlreadyGranted(RealmUpdateRolesRep): ...

class RealmUpdateRolesRepIncompatibleProfile(RealmUpdateRolesRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmUpdateRolesRepNotFound(RealmUpdateRolesRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmUpdateRolesRepInMaintenance(RealmUpdateRolesRep): ...
class RealmUpdateRolesRepUserRevoked(RealmUpdateRolesRep): ...

class RealmUpdateRolesRepRequireGreaterTimestamp(RealmUpdateRolesRep):
    def __init__(self, strictly_greater_than: DateTime) -> None: ...
    @property
    def strictly_greater_than(self) -> DateTime: ...

class RealmUpdateRolesRepBadTimestamp(RealmUpdateRolesRep):
    def __init__(
        self,
        reason: str | None,
        ballpark_client_early_offset: float,
        ballpark_client_late_offset: float,
        backend_timestamp: DateTime,
        client_timestamp: DateTime,
    ) -> None: ...
    @property
    def reason(self) -> str | None: ...
    @property
    def ballpark_client_early_offset(self) -> float: ...
    @property
    def ballpark_client_late_offset(self) -> float: ...
    @property
    def backend_timestamp(self) -> DateTime: ...
    @property
    def client_timestamp(self) -> DateTime: ...

class RealmUpdateRolesRepRealmDeleted(RealmUpdateRolesRep):
    def __init__(self) -> None: ...

class RealmUpdateRolesRepUnknownStatus(RealmUpdateRolesRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class RealmStartReencryptionMaintenanceReq:
    def __init__(
        self,
        realm_id: RealmID,
        encryption_revision: int,
        timestamp: DateTime,
        per_participant_message: dict[UserID, bytes],
    ) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def realm_id(self) -> RealmID: ...
    @property
    def encryption_revision(self) -> int: ...
    @property
    def timestamp(self) -> DateTime: ...
    @property
    def per_participant_message(self) -> dict[UserID, bytes]: ...

class RealmStartReencryptionMaintenanceRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmStartReencryptionMaintenanceRep: ...

class RealmStartReencryptionMaintenanceRepOk(RealmStartReencryptionMaintenanceRep): ...
class RealmStartReencryptionMaintenanceRepNotAllowed(RealmStartReencryptionMaintenanceRep): ...

class RealmStartReencryptionMaintenanceRepNotFound(RealmStartReencryptionMaintenanceRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmStartReencryptionMaintenanceRepBadEncryptionRevision(
    RealmStartReencryptionMaintenanceRep
): ...

class RealmStartReencryptionMaintenanceRepParticipantMismatch(RealmStartReencryptionMaintenanceRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmStartReencryptionMaintenanceRepMaintenanceError(RealmStartReencryptionMaintenanceRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmStartReencryptionMaintenanceRepInMaintenance(RealmStartReencryptionMaintenanceRep): ...

class RealmStartReencryptionMaintenanceRepBadTimestamp(RealmStartReencryptionMaintenanceRep):
    def __init__(
        self,
        reason: str | None,
        ballpark_client_early_offset: float,
        ballpark_client_late_offset: float,
        backend_timestamp: DateTime,
        client_timestamp: DateTime,
    ) -> None: ...
    @property
    def reason(self) -> str | None: ...
    @property
    def ballpark_client_early_offset(self) -> float: ...
    @property
    def ballpark_client_late_offset(self) -> float: ...
    @property
    def backend_timestamp(self) -> DateTime: ...
    @property
    def client_timestamp(self) -> DateTime: ...

class RealmStartReencryptionMaintenanceRepRealmDeleted(RealmStartReencryptionMaintenanceRep):
    def __init__(self) -> None: ...

class RealmStartReencryptionMaintenanceRepUnknownStatus(RealmStartReencryptionMaintenanceRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class RealmFinishReencryptionMaintenanceReq:
    def __init__(self, realm_id: RealmID, encryption_revision: int) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def realm_id(self) -> RealmID: ...
    @property
    def encryption_revision(self) -> int: ...

class RealmFinishReencryptionMaintenanceRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmFinishReencryptionMaintenanceRep: ...

class RealmFinishReencryptionMaintenanceRepOk(RealmFinishReencryptionMaintenanceRep): ...
class RealmFinishReencryptionMaintenanceRepNotAllowed(RealmFinishReencryptionMaintenanceRep): ...

class RealmFinishReencryptionMaintenanceRepNotFound(RealmFinishReencryptionMaintenanceRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmFinishReencryptionMaintenanceRepBadEncryptionRevision(
    RealmFinishReencryptionMaintenanceRep
): ...

class RealmFinishReencryptionMaintenanceRepNotInMaintenance(RealmFinishReencryptionMaintenanceRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmFinishReencryptionMaintenanceRepMaintenanceError(RealmFinishReencryptionMaintenanceRep):
    def __init__(self, reason: str | None) -> None: ...
    @property
    def reason(self) -> str | None: ...

class RealmFinishReencryptionMaintenanceRepRealmDeleted(RealmFinishReencryptionMaintenanceRep):
    def __init__(self) -> None: ...

class RealmFinishReencryptionMaintenanceRepUnknownStatus(RealmFinishReencryptionMaintenanceRep):
    def __init__(self, status: str, reason: str | None) -> None: ...
    @property
    def status(self) -> str: ...
    @property
    def reason(self) -> str | None: ...

class MaintenanceType:
    GARBAGE_COLLECTION: MaintenanceType
    REENCRYPTION: MaintenanceType

    VALUES: tuple[MaintenanceType, ...]

    @classmethod
    def from_str(cls, value: str) -> MaintenanceType: ...
    def __init__(self, maintenance_type: str) -> None: ...
    @property
    def str(self) -> str: ...

class RealmUpdateArchivingReq:
    def __init__(self, role_certificate: bytes, recipient_message: bytes | None) -> None: ...
    def dump(self) -> bytes: ...
    @property
    def archiving_certificate(self) -> bytes: ...

class RealmUpdateArchivingRep:
    def dump(self) -> bytes: ...
    @classmethod
    def load(cls, buf: bytes) -> RealmUpdateArchivingRep: ...

class RealmUpdateArchivingRepOk(RealmUpdateArchivingRep): ...

class RealmUpdateArchivingRepNotAllowed(RealmUpdateArchivingRep):
    def __init__(self) -> None: ...

class RealmUpdateArchivingRepInvalidCertification(RealmUpdateArchivingRep):
    def __init__(self) -> None: ...

class RealmUpdateArchivingRepNotFound(RealmUpdateArchivingRep):
    def __init__(self) -> None: ...

class RealmUpdateArchivingRepRequireGreaterTimestamp(RealmUpdateArchivingRep):
    def __init__(self, strictly_greater_than: DateTime) -> None: ...
    @property
    def strictly_greater_than(self) -> DateTime: ...

class RealmUpdateArchivingRepBadTimestamp(RealmUpdateArchivingRep):
    def __init__(
        self,
        ballpark_client_early_offset: float,
        ballpark_client_late_offset: float,
        backend_timestamp: DateTime,
        client_timestamp: DateTime,
    ) -> None: ...
    @property
    def ballpark_client_early_offset(self) -> float: ...
    @property
    def ballpark_client_late_offset(self) -> float: ...
    @property
    def backend_timestamp(self) -> DateTime: ...
    @property
    def client_timestamp(self) -> DateTime: ...

class RealmUpdateArchivingRepRealmDeleted(RealmUpdateArchivingRep): ...
class RealmUpdateArchivingRepArchivingPeriodTooShort(RealmUpdateArchivingRep): ...

class RealmUpdateArchivingRepUnknownStatus(RealmUpdateArchivingRep):
    def __init__(self, status: str) -> None: ...
    @property
    def status(self) -> str: ...
